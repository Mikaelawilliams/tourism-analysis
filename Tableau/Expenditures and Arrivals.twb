<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1211.0901                               -->
<workbook original-version='18.1' source-build='2024.3.2 (20243.24.1211.0901)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Arrivals and Expenditures Extract' inline='true' name='federated.1ydszat1htmmgz160c9u107mzdfd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Arrivals and Expenditures' name='hyper.0e4o2980w62ufl19bfcn30jgrnzz'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/mikae/Downloads/Arrivals and Expenditures.hyper' default-settings='yes' server='' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='hyper.0e4o2980w62ufl19bfcn30jgrnzz' name='Extract' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Expenditures</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Expenditures]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Expenditures</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>214</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Extract (Extract.Extract)_5E884A5A4EE544058859355C4E8691B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REGION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[REGION]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>REGION</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>214</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Extract (Extract.Extract)_5E884A5A4EE544058859355C4E8691B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>133</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>6</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Extract (Extract.Extract)_5E884A5A4EE544058859355C4E8691B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Arrivals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Arrivals]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Arrivals</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1120</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Extract (Extract.Extract)_5E884A5A4EE544058859355C4E8691B3]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Expenditures' datatype='integer' name='[Arrivals]' role='measure' type='quantitative' />
      <column caption='Arrivals' datatype='integer' name='[Expenditures]' role='measure' type='quantitative' />
      <column caption='Region' datatype='string' name='[REGION]' role='dimension' type='nominal' />
      <column caption='Year' datatype='date' name='[YEAR]' role='dimension' type='ordinal' />
      <column caption='Extract' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_5E884A5A4EE544058859355C4E8691B3]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='Extract' id='Extract (Extract.Extract)_5E884A5A4EE544058859355C4E8691B3'>
            <properties context=''>
              <relation connection='hyper.0e4o2980w62ufl19bfcn30jgrnzz' name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Expenditures and Arrivals</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Arrivals and Expenditures Extract' name='federated.1ydszat1htmmgz160c9u107mzdfd' />
          </datasources>
          <datasource-dependencies datasource='federated.1ydszat1htmmgz160c9u107mzdfd'>
            <column caption='Expenditures' datatype='integer' name='[Arrivals]' role='measure' type='quantitative' />
            <column caption='Arrivals' datatype='integer' name='[Expenditures]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[REGION]' role='dimension' type='nominal' />
            <column caption='Year' datatype='date' name='[YEAR]' role='dimension' type='ordinal' />
            <column-instance column='[Arrivals]' derivation='Sum' forecast-column-base='[sum:Arrivals:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Arrivals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Expenditures]' derivation='Sum' forecast-column-base='[sum:Expenditures:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Expenditures:qk]' pivot='key' type='quantitative' />
            <column-instance column='[REGION]' derivation='None' name='[none:REGION:nk]' pivot='key' type='nominal' />
            <column-instance column='[Arrivals]' derivation='Sum' name='[sum:Arrivals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Expenditures]' derivation='Sum' name='[sum:Expenditures:qk]' pivot='key' type='quantitative' />
            <column-instance column='[YEAR]' derivation='Year-Trunc' name='[tyr:YEAR:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ydszat1htmmgz160c9u107mzdfd].[none:REGION:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Bahamas&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Central African Republic&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Chad&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Cuba&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:REGION:nk]' member='&quot;United States of America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ydszat1htmmgz160c9u107mzdfd].[none:REGION:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#b07aa1' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ydszat1htmmgz160c9u107mzdfd].[fVal:sum:Expenditures:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#b07aa1' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ydszat1htmmgz160c9u107mzdfd].[fVal:sum:Arrivals:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#b07aa1' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ydszat1htmmgz160c9u107mzdfd].[fVal:sum:Expenditures:qk] + [federated.1ydszat1htmmgz160c9u107mzdfd].[fVal:sum:Arrivals:qk])</rows>
        <cols>[federated.1ydszat1htmmgz160c9u107mzdfd].[tyr:YEAR:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-periods='Year-Trunc' range-size='3' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{824038EC-2F35-45AD-9A2A-A656EAE16BBE}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ydszat1htmmgz160c9u107mzdfd].[none:REGION:nk]</field>
            <field>[federated.1ydszat1htmmgz160c9u107mzdfd].[yr:YEAR:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{25462945-DD35-486B-820C-85C4B6AD9085}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
